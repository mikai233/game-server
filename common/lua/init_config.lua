---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by dream.
--- DateTime: 2023/3/12 15:45
---
require("lua/config_load_order")
local rawGameConfigs = {}

local generatedFiles = RustUtil.ListFiles("lua/generated_excel", true, "lua")
for _, file in ipairs(generatedFiles) do
    local configFile = RustUtil.StripSuffix(file, ".lua")
    local excelConfig = require(configFile)
    rawGameConfigs[excelConfig.name] = excelConfig
end

GameConfigs = {}

local excelFiles = RustUtil.ListFiles("lua/excel", true, "lua")

for _, file in ipairs(excelFiles) do
    local configFile = RustUtil.StripSuffix(file, ".lua")
    local excelConfig = require(configFile).New()
    local name = excelConfig:GetName()
    local config = rawGameConfigs[name]
    excelConfig:InjectConfig(config)
    GameConfigs[name] = excelConfig
end

for name, rawConfig in pairs(rawGameConfigs) do
    if not GameConfigs[name] then
        local defaultConfig = DefaultGameConfig.New()
        defaultConfig.name = name
        defaultConfig:InjectConfig(rawConfig)
        GameConfigs[name] = defaultConfig
    end
end

local completeLoaded = {}

for name, gameConfig in pairs(GameConfigs) do
    local firstOnComplete = ConfigLoadOrder:GetCompleteFirst()
    if firstOnComplete[name] then
        gameConfig:OnAllConfigInjectComplete()
        completeLoaded[name] = {}
    end
end

for name, gameConfig in pairs(GameConfigs) do
    local lastOnComplete = ConfigLoadOrder:GetCompleteLast()
    if lastOnComplete[name] then
        gameConfig:OnAllConfigInjectComplete()
        completeLoaded[name] = {}
    end
end

for name, gameConfig in pairs(GameConfigs) do
    if completeLoaded[name] == nil then
        gameConfig:OnAllConfigInjectComplete()
        completeLoaded[name] = {}
    end
end

rawGameConfigs = nil
completeLoaded = nil